{
	"id": "ab3a0a058ba642c3dbf1d657948170fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"testing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Loop {\r\n\r\n    function loop() public pure {\r\n        // for loop\r\n        for (uint i = 0; i < 10; i++) {\r\n            if (i == 3) {\r\n                // skip to next iteration with continue\r\n                continue;\r\n            }\r\n            if (i == 5) {\r\n                //exit loop with break\r\n                break;\r\n            }\r\n        }\r\n\r\n        // while loop\r\n        uint j;\r\n        while (j < 10) {\r\n            j++; //j= j+1\r\n        }\r\n\r\n        do {\r\n            j = j * 2;\r\n        } while (j < 20);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"testing.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"testing.sol\":60:600  contract Loop {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"testing.sol\":60:600  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa92100cb\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"testing.sol\":83:597  function loop() public pure {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"testing.sol\":148:154  uint i */\n      0x00\n        /* \"testing.sol\":143:417  for (uint i = 0; i < 10; i++) {... */\n    tag_7:\n        /* \"testing.sol\":164:166  10 */\n      0x0a\n        /* \"testing.sol\":160:161  i */\n      dup2\n        /* \"testing.sol\":160:166  i < 10 */\n      lt\n        /* \"testing.sol\":143:417  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_8\n      jumpi\n        /* \"testing.sol\":197:198  3 */\n      0x03\n        /* \"testing.sol\":192:193  i */\n      dup2\n        /* \"testing.sol\":192:198  i == 3 */\n      sub\n        /* \"testing.sol\":188:300  if (i == 3) {... */\n      iszero\n        /* \"testing.sol\":276:284  continue */\n      tag_9\n        /* \"testing.sol\":188:300  if (i == 3) {... */\n      jumpi\n        /* \"testing.sol\":323:324  5 */\n      0x05\n        /* \"testing.sol\":318:319  i */\n      dup2\n        /* \"testing.sol\":318:324  i == 5 */\n      sub\n        /* \"testing.sol\":314:406  if (i == 5) {... */\n      iszero\n        /* \"testing.sol\":385:390  break */\n      tag_8\n        /* \"testing.sol\":314:406  if (i == 5) {... */\n      jumpi\n        /* \"testing.sol\":143:417  for (uint i = 0; i < 10; i++) {... */\n    tag_9:\n        /* \"testing.sol\":168:171  i++ */\n      dup1\n      dup1\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap2\n      pop\n      pop\n        /* \"testing.sol\":143:417  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"testing.sol\":452:458  uint j */\n      0x00\n        /* \"testing.sol\":469:523  while (j < 10) {... */\n    tag_14:\n        /* \"testing.sol\":480:482  10 */\n      0x0a\n        /* \"testing.sol\":476:477  j */\n      dup2\n        /* \"testing.sol\":476:482  j < 10 */\n      lt\n        /* \"testing.sol\":469:523  while (j < 10) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"testing.sol\":499:502  j++ */\n      dup1\n      dup1\n      tag_16\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n      swap2\n      pop\n      pop\n        /* \"testing.sol\":469:523  while (j < 10) {... */\n      jump(tag_14)\n    tag_15:\n        /* \"testing.sol\":535:590  do {... */\n    tag_17:\n        /* \"testing.sol\":561:562  2 */\n      0x02\n        /* \"testing.sol\":557:558  j */\n      dup2\n        /* \"testing.sol\":557:562  j * 2 */\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"testing.sol\":553:562  j = j * 2 */\n      swap1\n      pop\n        /* \"testing.sol\":586:588  20 */\n      0x14\n        /* \"testing.sol\":582:583  j */\n      dup2\n        /* \"testing.sol\":582:588  j < 20 */\n      lt\n        /* \"testing.sol\":535:590  do {... */\n      tag_17\n      jumpi\n        /* \"testing.sol\":111:597  {... */\n      pop\n        /* \"testing.sol\":83:597  function loop() public pure {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_22:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x11\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:270   */\n    tag_23:\n        /* \"#utility.yul\":230:237   */\n      0x00\n        /* \"#utility.yul\":259:264   */\n      dup2\n        /* \"#utility.yul\":248:264   */\n      swap1\n      pop\n        /* \"#utility.yul\":193:270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":276:509   */\n    tag_13:\n        /* \"#utility.yul\":315:318   */\n      0x00\n        /* \"#utility.yul\":338:362   */\n      tag_28\n        /* \"#utility.yul\":356:361   */\n      dup3\n        /* \"#utility.yul\":338:362   */\n      tag_23\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":329:362   */\n      swap2\n      pop\n        /* \"#utility.yul\":384:450   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":377:382   */\n      dup3\n        /* \"#utility.yul\":374:451   */\n      sub\n        /* \"#utility.yul\":371:474   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":454:472   */\n      tag_30\n      tag_22\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":371:474   */\n    tag_29:\n        /* \"#utility.yul\":501:502   */\n      0x01\n        /* \"#utility.yul\":494:499   */\n      dup3\n        /* \"#utility.yul\":490:503   */\n      add\n        /* \"#utility.yul\":483:503   */\n      swap1\n      pop\n        /* \"#utility.yul\":276:509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":515:925   */\n    tag_21:\n        /* \"#utility.yul\":555:562   */\n      0x00\n        /* \"#utility.yul\":578:598   */\n      tag_32\n        /* \"#utility.yul\":596:597   */\n      dup3\n        /* \"#utility.yul\":578:598   */\n      tag_23\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":573:598   */\n      swap2\n      pop\n        /* \"#utility.yul\":612:632   */\n      tag_33\n        /* \"#utility.yul\":630:631   */\n      dup4\n        /* \"#utility.yul\":612:632   */\n      tag_23\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":607:632   */\n      swap3\n      pop\n        /* \"#utility.yul\":667:668   */\n      dup3\n        /* \"#utility.yul\":664:665   */\n      dup3\n        /* \"#utility.yul\":660:669   */\n      mul\n        /* \"#utility.yul\":689:719   */\n      tag_34\n        /* \"#utility.yul\":707:718   */\n      dup2\n        /* \"#utility.yul\":689:719   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":678:719   */\n      swap2\n      pop\n        /* \"#utility.yul\":868:869   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup3\n        /* \"#utility.yul\":855:870   */\n      div\n        /* \"#utility.yul\":852:853   */\n      dup5\n        /* \"#utility.yul\":849:871   */\n      eq\n        /* \"#utility.yul\":829:830   */\n      dup4\n        /* \"#utility.yul\":822:831   */\n      iszero\n        /* \"#utility.yul\":802:885   */\n      or\n        /* \"#utility.yul\":779:918   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":898:916   */\n      tag_36\n      tag_22\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":779:918   */\n    tag_35:\n        /* \"#utility.yul\":563:925   */\n      pop\n        /* \"#utility.yul\":515:925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e3fba7bc3447ce13620e199cf44efa2bc76f721d176b7d9424a5cb0314b5ce7064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101a0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a92100cb14610030575b600080fd5b61003861003a565b005b60005b600a81101561006c57600381031561005957600581031561006c575b8080610064906100e0565b91505061003d565b5060005b600a81101561008c578080610084906100e0565b915050610070565b5b60028161009a9190610128565b90506014811061008d5750565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006100eb826100d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361011d5761011c6100a7565b5b600182019050919050565b6000610133826100d6565b915061013e836100d6565b925082820261014c816100d6565b91508282048414831517610163576101626100a7565b5b509291505056fea2646970667358221220e3fba7bc3447ce13620e199cf44efa2bc76f721d176b7d9424a5cb0314b5ce7064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x6C JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x59 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x6C JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x64 SWAP1 PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8C JUMPI DUP1 DUP1 PUSH2 0x84 SWAP1 PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 LT PUSH2 0x8D JUMPI POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB DUP3 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x11D JUMPI PUSH2 0x11C PUSH2 0xA7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133 DUP3 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E DUP4 PUSH2 0xD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14C DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x163 JUMPI PUSH2 0x162 PUSH2 0xA7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xFB 0xA7 0xBC CALLVALUE SELFBALANCE 0xCE SGT PUSH3 0xE199C DELEGATECALL 0x4E STATICCALL 0x2B 0xC7 PUSH16 0x721D176B7D9424A5CB0314B5CE706473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "60:540:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@loop_51": {
									"entryPoint": 58,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_mul_t_uint256": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:928:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "238:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "248:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "259:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "248:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "220:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "230:7:1",
														"type": ""
													}
												],
												"src": "193:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "319:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "329:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "356:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "338:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "329:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "452:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "454:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "454:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "454:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "377:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "384:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "374:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "374:77:1"
															},
															"nodeType": "YulIf",
															"src": "371:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "483:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "501:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "490:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "305:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "315:3:1",
														"type": ""
													}
												],
												"src": "276:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "573:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "596:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "578:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "573:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "607:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "630:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "612:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "607:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "641:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "664:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "667:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "660:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "645:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "678:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "707:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "689:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "678:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "896:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "898:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "898:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "898:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "829:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "822:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "822:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "852:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "859:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "868:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "855:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "855:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "849:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "802:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "802:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:113:1"
															},
															"nodeType": "YulIf",
															"src": "779:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "546:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "549:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "555:7:1",
														"type": ""
													}
												],
												"src": "515:410:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a92100cb14610030575b600080fd5b61003861003a565b005b60005b600a81101561006c57600381031561005957600581031561006c575b8080610064906100e0565b91505061003d565b5060005b600a81101561008c578080610084906100e0565b915050610070565b5b60028161009a9190610128565b90506014811061008d5750565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006100eb826100d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361011d5761011c6100a7565b5b600182019050919050565b6000610133826100d6565b915061013e836100d6565b925082820261014c816100d6565b91508282048414831517610163576101626100a7565b5b509291505056fea2646970667358221220e3fba7bc3447ce13620e199cf44efa2bc76f721d176b7d9424a5cb0314b5ce7064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA92100CB EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x6C JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x59 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0x6C JUMPI JUMPDEST DUP1 DUP1 PUSH2 0x64 SWAP1 PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x8C JUMPI DUP1 DUP1 PUSH2 0x84 SWAP1 PUSH2 0xE0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST SWAP1 POP PUSH1 0x14 DUP2 LT PUSH2 0x8D JUMPI POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB DUP3 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x11D JUMPI PUSH2 0x11C PUSH2 0xA7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133 DUP3 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP PUSH2 0x13E DUP4 PUSH2 0xD6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x14C DUP2 PUSH2 0xD6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x163 JUMPI PUSH2 0x162 PUSH2 0xA7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xFB 0xA7 0xBC CALLVALUE SELFBALANCE 0xCE SGT PUSH3 0xE199C DELEGATECALL 0x4E STATICCALL 0x2B 0xC7 PUSH16 0x721D176B7D9424A5CB0314B5CE706473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "60:540:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;83:514;;;:::i;:::-;;;148:6;143:274;164:2;160:1;:6;143:274;;;197:1;192;:6;188:112;276:8;188:112;323:1;318;:6;314:92;385:5;314:92;143:274;168:3;;;;;:::i;:::-;;;;143:274;;;;452:6;469:54;480:2;476:1;:6;469:54;;;499:3;;;;;:::i;:::-;;;;469:54;;;535:55;561:1;557;:5;;;;:::i;:::-;553:9;;586:2;582:1;:6;535:55;;111:486;83:514::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:77;230:7;259:5;248:16;;193:77;;;:::o;276:233::-;315:3;338:24;356:5;338:24;:::i;:::-;329:33;;384:66;377:5;374:77;371:103;;454:18;;:::i;:::-;371:103;501:1;494:5;490:13;483:20;;276:233;;;:::o;515:410::-;555:7;578:20;596:1;578:20;:::i;:::-;573:25;;612:20;630:1;612:20;:::i;:::-;607:25;;667:1;664;660:9;689:30;707:11;689:30;:::i;:::-;678:41;;868:1;859:7;855:15;852:1;849:22;829:1;822:9;802:83;779:139;;898:18;;:::i;:::-;779:139;563:362;515:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "83200",
								"executionCost": "129",
								"totalCost": "83329"
							},
							"external": {
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 600,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 600,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3fba7bc3447ce13620e199cf44efa2bc76f721d176b7d9424a5cb0314b5ce7064736f6c63430008120033",
									".code": [
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 83,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 83,
											"end": 597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 83,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 83,
											"end": 597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 160,
											"end": 161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 166,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 198,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 188,
											"end": 300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 276,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 188,
											"end": 300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 318,
											"end": 324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 314,
											"end": 406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 385,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 314,
											"end": 406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 168,
											"end": 171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 168,
											"end": 171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 143,
											"end": 417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 452,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 469,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 480,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 476,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 476,
											"end": 482,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 469,
											"end": 523,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 469,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 469,
											"end": 523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 499,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 499,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 499,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 469,
											"end": 523,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 469,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 535,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 535,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 557,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 582,
											"end": 583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 582,
											"end": 588,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 535,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 535,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 111,
											"end": 597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 83,
											"end": 597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 193,
											"end": 270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 264,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 248,
											"end": 264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 276,
											"end": 509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 315,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 356,
											"end": 361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 338,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 362,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 338,
											"end": 362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 329,
											"end": 362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 384,
											"end": 450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 374,
											"end": 451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 454,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 454,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 454,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 474,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 490,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 483,
											"end": 503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 515,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 578,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 578,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 578,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 578,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 573,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 630,
											"end": 631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 612,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 612,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 612,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 632,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 664,
											"end": 665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 669,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 689,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 707,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 689,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 689,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 719,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 689,
											"end": 719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 868,
											"end": 869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 855,
											"end": 870,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 849,
											"end": 871,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 829,
											"end": 830,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 822,
											"end": 831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 802,
											"end": 885,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 779,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 779,
											"end": 918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 898,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 916,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 898,
											"end": 916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 779,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 515,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"testing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"testing.sol\":\"Loop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"testing.sol\":{\"keccak256\":\"0x5c8f32d751e41f79dd14c5dd80633944aeba066cc3813deaddfa7d1b329258d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://655f8ad4368eff1d20d9a2c5a81c5de5af34e8aba1e0f41920b7659b849b5959\",\"dweb:/ipfs/QmbyTUvCJxH7qgjm86CHFzgEY9k1etiKMJrdK8m5TpvNTX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"testing.sol": {
				"ast": {
					"absolutePath": "testing.sol",
					"exportedSymbols": {
						"Loop": [
							52
						]
					},
					"id": 53,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "Loop",
							"nameLocation": "69:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "111:486:0",
										"statements": [
											{
												"body": {
													"id": 26,
													"nodeType": "Block",
													"src": "173:244:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 14,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "192:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "197:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "192:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 19,
															"nodeType": "IfStatement",
															"src": "188:112:0",
															"trueBody": {
																"id": 18,
																"nodeType": "Block",
																"src": "200:100:0",
																"statements": [
																	{
																		"id": 17,
																		"nodeType": "Continue",
																		"src": "276:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 20,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "318:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 21,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "323:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "318:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 25,
															"nodeType": "IfStatement",
															"src": "314:92:0",
															"trueBody": {
																"id": 24,
																"nodeType": "Block",
																"src": "326:80:0",
																"statements": [
																	{
																		"id": 23,
																		"nodeType": "Break",
																		"src": "385:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "160:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "164:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "160:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"initializationExpression": {
													"assignments": [
														5
													],
													"declarations": [
														{
															"constant": false,
															"id": 5,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "153:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 27,
															"src": "148:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 4,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 7,
													"initialValue": {
														"hexValue": "30",
														"id": 6,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "157:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "148:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "168:3:0",
														"subExpression": {
															"id": 11,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 13,
													"nodeType": "ExpressionStatement",
													"src": "168:3:0"
												},
												"nodeType": "ForStatement",
												"src": "143:274:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "457:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "452:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 30,
												"nodeType": "VariableDeclarationStatement",
												"src": "452:6:0"
											},
											{
												"body": {
													"id": 37,
													"nodeType": "Block",
													"src": "484:39:0",
													"statements": [
														{
															"expression": {
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "499:3:0",
																"subExpression": {
																	"id": 34,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 36,
															"nodeType": "ExpressionStatement",
															"src": "499:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 31,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "480:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "WhileStatement",
												"src": "469:54:0"
											},
											{
												"body": {
													"id": 45,
													"nodeType": "Block",
													"src": "538:36:0",
													"statements": [
														{
															"expression": {
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 39,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "553:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 40,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "557:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "561:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "557:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "553:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "553:9:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3230",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "586:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "DoWhileStatement",
												"src": "535:55:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "92:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "96:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:0:0"
									},
									"scope": 52,
									"src": "83:514:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "60:540:0",
							"usedErrors": []
						}
					],
					"src": "33:567:0"
				},
				"id": 0
			}
		}
	}
}